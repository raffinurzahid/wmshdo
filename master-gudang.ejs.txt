master-gudang.ejs
<%- include('../partials/header', { title: 'Master Gudang - WMS', currentPage: 'master-gudang' }) %>

<button class="show-sidebar-btn" id="showSidebarBtn"><i class="fas fa-bars"></i></button>

<div class="app-container">
    <%- include('../partials/sidebar') %>

    <main class="main-content">
        <header class="header">
            <div class="header-left">
                <button class="mobile-menu-btn" id="mobileMenuBtn"><i class="fas fa-bars"></i></button>
            </div>
            <div class="header-right">
                <button class="notification-btn" id="notificationBtn">
                    <i class="fas fa-bell"></i>
                    <span class="notification-badge" id="notificationBadge">0</span>
                </button>
                <div style="position:relative;">
                    <button class="profile-btn" id="profileBtn">
                        <div class="profile-avatar">A</div>
                        <div style="text-align:left;">
                            <div style="font-size:12px;color:#6b7280;">Help Desk Team</div>
                            <div style="font-size:14px;font-weight:600;">Admin User</div>
                        </div>
                        <i class="fas fa-chevron-down" style="color:#6b7280;font-size:12px;"></i>
                    </button>
                </div>
            </div>
        </header>

        <div class="notification-panel" id="notificationPanel" style="position:fixed;top:70px;right:20px;width:350px;background:#fff;border-radius:12px;box-shadow:0 20px 60px rgba(0,0,0,.15);z-index:1500;max-height:400px;overflow:hidden;transform:translateX(100%);transition:transform .3s ease;">
            <div style="padding:16px 20px;border-bottom:1px solid #eef2f6;display:flex;justify-content:space-between;">
                <h3 style="font-size:16px;font-weight:600;">Notifications</h3>
                <button id="closeNotifications" style="background:none;border:none;cursor:pointer;"><i class="fas fa-times"></i></button>
            </div>
            <div id="notificationList" style="max-height:320px;overflow-y:auto;">
                <div style="padding:20px;text-align:center;color:#6b7280;">No notifications</div>
            </div>
        </div>

        <section class="page">
            <!-- Page Header -->
            <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:20px;">
                <div>
                    <h1 style="font-size:22px;margin-bottom:6px;">Master Gudang</h1>
                    <div style="color:#6b7280;">Real-time inventory from all warehouse transactions</div>
                </div>
            </div>

            <!-- Inventory Table Section -->
            <section style="background:#fff;border-radius:12px;box-shadow:0 8px 24px rgba(16,24,40,.04);overflow:hidden;">
                <!-- Search & Filter Bar -->
                <div style="padding:20px;border-bottom:1px solid #f1f5f9;">
                    <div style="display:flex;gap:12px;align-items:center;flex-wrap:wrap;">
                        <input 
                            type="text" 
                            id="searchInput" 
                            placeholder="Search by code, name, type, location..." 
                            style="flex:1;min-width:300px;padding:8px 12px;border:1px solid #e6e9ee;border-radius:8px;font-size:14px;"
                        >
                        <select id="statusFilter" style="padding:8px 12px;border:1px solid #e6e9ee;border-radius:8px;font-size:14px;background:#fff;cursor:pointer;">
                            <option value="">All Status</option>
                            <option value="New">New</option>
                            <option value="Second">Second</option>
                        </select>
                        <button 
                            onclick="refreshInventory()" 
                            style="padding:8px 16px;background:#28a745;color:#fff;border:none;border-radius:8px;cursor:pointer;font-size:14px;display:flex;align-items:center;gap:8px;"
                        >
                            <i class="fas fa-sync-alt"></i> Refresh
                        </button>
                    </div>
                </div>

                <!-- Table -->
                <div style="overflow-x:auto;">
                    <table style="width:100%;border-collapse:collapse;">
                        <thead>
                            <tr style="background:#f8fafc;">
                                <th style="padding:12px 8px;text-align:left;font-weight:700;border-bottom:1px solid #eef2f6;font-size:13px;">Kode Barang</th>
                                <th style="padding:12px 8px;text-align:left;font-weight:700;border-bottom:1px solid #eef2f6;font-size:13px;">Nama Barang</th>
                                <th style="padding:12px 8px;text-align:left;font-weight:700;border-bottom:1px solid #eef2f6;font-size:13px;">Jenis Barang</th>
                                <th style="padding:12px 8px;text-align:left;font-weight:700;border-bottom:1px solid #eef2f6;font-size:13px;">Spesifikasi</th>
                                <th style="padding:12px 8px;text-align:center;font-weight:700;border-bottom:1px solid #eef2f6;font-size:13px;">Status</th>
                                <th style="padding:12px 8px;text-align:left;font-weight:700;border-bottom:1px solid #eef2f6;font-size:13px;">Lokasi</th>
                                <th style="padding:12px 8px;text-align:left;font-weight:700;border-bottom:1px solid #eef2f6;font-size:13px;">Tanggal & Jam</th>
                            </tr>
                        </thead>
                        <tbody id="inventoryTableBody">
                            <tr><td colspan="7" style="padding:20px;text-align:center;color:#6b7280;font-size:14px;">Loading...</td></tr>
                        </tbody>
                    </table>
                </div>

                <!-- Footer Info -->
                <div style="padding:16px 20px;background:#f8fafc;border-top:1px solid #e2e8f0;display:flex;justify-content:space-between;align-items:center;font-size:13px;color:#64748b;">
                    <div>
                        Showing <span id="showingCount">0</span> of <span id="totalCount">0</span> items
                    </div>
                    <div>
                        <i class="fas fa-info-circle" style="margin-right:4px;"></i>
                        Data updates automatically from transactions
                    </div>
                </div>
            </section>
        </section>
    </main>
</div>

<div id="toast" style="position:fixed;top:20px;right:20px;background:#fff;padding:14px 16px;border-radius:8px;box-shadow:0 10px 40px rgba(2,6,23,.2);transform:translateX(120%);transition:transform .3s;z-index:4000;border-left:4px solid #28a745;"></div>

<script>

let inventoryData = [];
let notificationsData = [];

const showToast = (msg, type = 'info') => {
    const toast = document.getElementById('toast');
    const colors = { 
        success: '#28a745', 
        error: '#dc3545', 
        info: '#17a2b8',
        warning: '#ffc107'
    };
    
    toast.textContent = msg;
    toast.style.borderLeftColor = colors[type] || colors.info;
    toast.style.transform = 'translateX(0)';
    
    console.log(`[TOAST ${type.toUpperCase()}]:`, msg);
    
    setTimeout(() => toast.style.transform = 'translateX(120%)', 4000);
};

// Notifications - with graceful fallback
const fetchNotifications = async () => {
    try {
        const res = await fetch('/api/notifications');
        if (res.ok) {
            const data = await res.json();
            notificationsData = (data && data.data) ? data.data : [];
        } else {
            notificationsData = [];
        }
        renderNotifications();
    } catch (err) { 
        console.error('[Notifications] Fetch error:', err);
        notificationsData = [];
        renderNotifications();
    }
};

const renderNotifications = () => {
    const list = document.getElementById('notificationList');
    const badge = document.getElementById('notificationBadge');
    const unread = notificationsData.filter(n => !n.is_read).length;
    
    badge.textContent = unread;
    badge.style.display = unread > 0 ? 'block' : 'none';

    if (notificationsData.length === 0) {
        list.innerHTML = '<div style="padding:20px;text-align:center;color:#6b7280;">No notifications</div>';
        return;
    }

    list.innerHTML = notificationsData.map(n => `
        <div onclick="markAsRead('${n.id_notification}')" style="padding:14px 20px;border-bottom:1px solid #f8f9fb;cursor:pointer;${!n.is_read ? 'background:#f0f8ff;' : ''}">
            <div style="display:flex;gap:12px;">
                <div style="width:36px;height:36px;border-radius:50%;display:flex;align-items:center;justify-content:center;background:${n.color}20;color:${n.color};">
                    <i class="${n.icon}"></i>
                </div>
                <div style="flex:1;">
                    <div style="font-weight:600;font-size:14px;">${n.title}</div>
                    <div style="font-size:13px;color:#6b7280;">${n.message}</div>
                    <div style="font-size:12px;color:#9aa3ad;margin-top:4px;">${new Date(n.created_at).toLocaleString()}</div>
                </div>
            </div>
        </div>
    `).join('');
};

const markAsRead = (id) => {
    fetch(`/api/notifications/${id}/read`, { method: 'PUT' })
        .then(() => fetchNotifications())
        .catch(err => console.error('Mark read error:', err));
};

document.getElementById('notificationBtn').onclick = (e) => {
    e.stopPropagation();
    const panel = document.getElementById('notificationPanel');
    panel.style.transform = panel.style.transform === 'translateX(0px)' ? 'translateX(100%)' : 'translateX(0)';
};

document.getElementById('closeNotifications').onclick = () => {
    document.getElementById('notificationPanel').style.transform = 'translateX(100%)';
};

document.addEventListener('click', (e) => {
    const panel = document.getElementById('notificationPanel');
    const btn = document.getElementById('notificationBtn');
    if (!btn.contains(e.target) && !panel.contains(e.target)) {
        panel.style.transform = 'translateX(100%)';
    }
});

// Fetch Inventory from API
const fetchInventory = async () => {
    try {
        console.log('[Inventory] Fetching data...');
        const res = await fetch('/api/master-gudang/inventory');
        
        console.log('[Inventory] Response status:', res.status);
        
        if (res.ok) {
            const result = await res.json();
            inventoryData = result.data || [];
            
            console.log('[Inventory] Success! Total items:', inventoryData.length);
            renderInventoryTable();
        } else {
            const errorText = await res.text();
            console.error('[Inventory] Error response:', errorText);
            showToast('Failed to load inventory', 'error');
        }
    } catch (err) {
        console.error('[Inventory] Exception:', err);
        showToast('Failed to load inventory: ' + err.message, 'error');
    }
};

const renderInventoryTable = () => {
    const tbody = document.getElementById('inventoryTableBody');
    const searchTerm = document.getElementById('searchInput').value.toLowerCase();
    const statusFilter = document.getElementById('statusFilter').value;
    
    // Filter data
    let filteredData = inventoryData.filter(item => {
        const matchSearch = !searchTerm || 
            (item.kode_barang || '').toLowerCase().includes(searchTerm) ||
            (item.nama_barang || '').toLowerCase().includes(searchTerm) ||
            (item.jenis_barang || '').toLowerCase().includes(searchTerm) ||
            (item.lokasi || '').toLowerCase().includes(searchTerm) ||
            (item.spesifikasi || '').toLowerCase().includes(searchTerm);
        
        const matchStatus = !statusFilter || item.status === statusFilter;
        
        return matchSearch && matchStatus;
    });
    
    if (filteredData.length === 0) {
        tbody.innerHTML = '<tr><td colspan="7" style="padding:20px;text-align:center;color:#6b7280;font-size:14px;">No items found</td></tr>';
        document.getElementById('showingCount').textContent = '0';
        document.getElementById('totalCount').textContent = inventoryData.length;
        return;
    }

    const baseStyle = 'padding:12px 8px;font-size:14px;color:#333;font-weight:400;border-bottom:1px solid #f1f5f9;';

    let html = '';
    filteredData.forEach(item => {
        const statusColor = (item.status || 'New') === 'New' ? '#10b981' : '#f59e0b';
        const statusBg = (item.status || 'New') === 'New' ? '#d1fae5' : '#fef3c7';
        
        const formattedDate = item.tanggal ? 
            new Date(item.tanggal).toLocaleString('id-ID', {
                year: 'numeric',
                month: 'short',
                day: '2-digit',
                hour: '2-digit',
                minute: '2-digit'
            }) : '-';
        
        const spec = (item.spesifikasi || '-').length > 40 ? 
            item.spesifikasi.substring(0, 40) + '...' : 
            (item.spesifikasi || '-');
        
        html += `
            <tr>
                <td style="${baseStyle}font-weight:600;">${item.kode_barang || '-'}</td>
                <td style="${baseStyle}">${item.nama_barang || '-'}</td>
                <td style="${baseStyle}">${item.jenis_barang || '-'}</td>
                <td style="${baseStyle}font-size:12px;" title="${item.spesifikasi || '-'}">${spec}</td>
                <td style="${baseStyle}text-align:center;">
                    <span style="background:${statusBg};color:${statusColor};padding:4px 12px;border-radius:20px;font-size:12px;font-weight:700;">
                        ${item.status || 'New'}
                    </span>
                </td>
                <td style="${baseStyle}">${item.lokasi || 'Unknown'}</td>
                <td style="${baseStyle}font-size:12px;">${formattedDate}</td>
            </tr>
        `;
    });
    
    tbody.innerHTML = html;
    document.getElementById('showingCount').textContent = filteredData.length;
    document.getElementById('totalCount').textContent = inventoryData.length;
};

// Search functionality
document.getElementById('searchInput').oninput = renderInventoryTable;
document.getElementById('statusFilter').onchange = renderInventoryTable;

// Refresh button
function refreshInventory() {
    showToast('Refreshing inventory data...', 'info');
    fetchInventory();
    fetchNotifications();
}

// Initialize
document.addEventListener('DOMContentLoaded', () => {
    console.log('[Master Gudang] Page loaded');
    fetchInventory();
    fetchNotifications();
    
    // Auto refresh every 30 seconds
    setInterval(() => {
        console.log('[Master Gudang] Auto-refresh...');
        fetchInventory();
        fetchNotifications();
    }, 30000);
});
</script>

<%- include('../partials/footer') %>